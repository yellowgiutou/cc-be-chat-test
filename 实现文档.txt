请知悉：
	1.因第一次接触nodejs，有些语法和概念还不太熟悉，相关api也不熟悉，导致在这块耗时比较久，可能出现方法的使用或者变量的定义不是最优的方式。
	2.以下在后方标记ok的代表对应功能完成
	3.未避免代码过大，git中把node_modules文件夹给过滤了,如果要运行案例，可能需要自行下载下对应包(不是太熟悉对应包管理机制，但应该和其他包管理一样可以按需下载)

1.使用ws websocket包 ok
2.聊天实现：
	a.进入聊天房间，返回最近的50条聊天信息 ok
 	b.发送进入消息给所有在线用户 ok
	c.接收其他用户的聊天消息  ok
	d.敏感字过滤 ok
	e.命令功能
		1./stats username 显示用户登录时长 ok
		2./list  显示所有用户 ok
		3./popular 显示最近5s使用过的命令 ok
3.单元测试 (未完成)
	暂时未做，需要安装很多npm包，而时间因前面说的原因耗去太多，为了保证休息时间，顾未来得及完善单元测试(只安装了ava，但是本机跑起来缺少很多相应的包)
4.设计文档
	聊天设计：
		1.聊天数据对象设计为一个聊天室1个对象(chatRoom)，方便多个聊天室扩展
		2.聊天室内的消息和用户封装在内部，对外暴露接口
		3.对于与客户端交互的消息，处理器为chatMessageHandler管理，需要处理的消息类型通过对应的方法注册回调，以此实现具体消息类型与处理器的解耦
		4.暂时还不知道nodejs中如何初始化多个需要出示的模块，所以当前是在chatMessageHandler 底部引入，但是没有调用的地方
		5.敏感词替换在dfaUtil中，使用的是dfa算法
		6.客户端连接上websocket的时候，设计上不算进入聊天室，而是点击“进入聊天”按钮才算进入聊天室(因为要这时候才能确认名字)

	cmd设计：
		1.cmd命令处理器负责处理cmd命令输入，提供cmd命令与回调函数的注册，以实现具体cmd与处理器的解耦
		2.当前cmd命令输入的解析，应该有更优雅的方式，但是因为时间的关系，暂时直接用的字符串分割
		3.关于用户登录时长的显示处理也应该有更优雅的方式处理，也因为时间关系，暂时没有深究，直接使用的暴力拼接法


6.npm包的增加和原因
	ava:有引用该包做单元测试，但因上面的原因，未能完成
	nodejs-websocket：webscoket框架

